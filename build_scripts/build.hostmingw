# This script builds cross compilers to target mingw
# Targets supported: i686-w64-mingw32 x86_64-w64-mingw32
# binutils 2.24 and gcc 4.7.4 are normally used

TOPDIR=/directory
GITHOME=ssh://git@github.com/MIPS
TARGET=${TARGET:-x86_64-w64-mingw32}
HOST=x86_64-pc-linux-gnu
INSTALL=${HOST_INSTALL:-$TOPDIR/install-$TARGET}
OBJ=$TOPDIR/obj-$TARGET
SYSROOT=$INSTALL

cd $TOPDIR
if [ ! -d `dirname $INSTALL` ]; then
   mkdir -p `dirname $INSTALL`
fi

grep -q -e 'Ubuntu [0-9]\+.[0-9]\+' /etc/issue
if [ $? -eq 0 ]; then
    os=`grep -o -e 'Ubuntu [0-9]\+.[0-9]\+' /etc/issue | tr '\ .' _ | tr U u`
else
    os=centos6
fi

# Cannonical install paths have the structure: $TARGET/version
# If a host toolchain is also present alongside the same install path
# then use it directly, else fall-bak to a fixed location.
HOSTTOOLSROOT=$( dirname $( dirname $HOST_INSTALL ) )
if [ ! -d $HOSTTOOLSROOT/$HOST/$os/4.9.4_v6.0.0 ]; then
    HOSTTOOLSROOT=/projects/mipssw/toolchains
fi
if [ -d $HOSTTOOLSROOT -a -d $HOSTTOOLSROOT/$HOST/4.9.4-$os/bin ]
   BUILDPATH=${BUILDPATH}:$HOSTTOOLSROOT/$HOST/4.9.4-$os/bin
else
   echo "Warning: Can't find $HOST toolchain, assuming installed default."
fi

G=(--path=$INSTALL/bin:$BUILDPATH --git_home=$GITHOME --build=$OBJ --prefix=$INSTALL)
G+=(--target=$TARGET --sysroot=$SYSROOT --jobs=${JOBS:-8} --no-pdf)
G+=(--branch=gcc:gcc-4_9_4-release --branch=binutils:binutils-2_25-branch)
G+=(--branch=packages:mips_rel/hosttools)
G+=(--build_triple=$HOST --host=$HOST)

# If you want to force an update of your sources before the build.
# uncommment the next line.
# b/build_toolchain update $G binutils-gdb glibc gcc qemu
b/build_toolchain update "${G[@]}" packages

# If you do not want to use the system gmp, mpfr, or mpc.
# uncomment the next line.
b/build_toolchain update "${G[@]}" gmp mpfr mpc

# You can build these with a single run and listing all targets (in order)
# they are listed seperately in order to make it easier to build/rebuild a
# single component.

b/build_toolchain build "${G[@]}" texinfo  || exit 1
b/build_toolchain build "${G[@]}" binutils  || exit 1
b/build_toolchain build "${G[@]}" --prefix=$INSTALL/mingw mingw || exit 1
b/build_toolchain build "${G[@]}" --make_target_all=all-gcc --make_target_install=install-gcc gcc || exit 1
b/build_toolchain build "${G[@]}" --prefix=$INSTALL/mingw mingw-w64 --extra_config_opts="--with-libraries=winpthreads" || exit 1
b/build_toolchain build "${G[@]}" gcc || exit 1
